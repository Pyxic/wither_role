"""empty message

Revision ID: eac30a23c7a1
Revises: 
Create Date: 2024-04-21 20:29:45.717932

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "eac30a23c7a1"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "attribute",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=15), nullable=False),
        sa.Column("short_name", sa.String(length=5), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "code",
            sa.Enum(
                "INTELLIGENCE",
                "REACTION",
                "DEXTERITY",
                "PHYSIQUE",
                "SPEED",
                "EMPATHY",
                "CRAFT",
                "VOLITION",
                "LUCK",
                "ENERGY",
                "SUSTAINABILITY",
                "RUNNING",
                "JUMPING",
                "HEALTH_POINTS",
                "STAMINA",
                "TRANSFERABLE_WEIGHT",
                "REST",
                "PUNCH",
                "KICK",
                name="attributetype",
            ),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
        sa.UniqueConstraint("name"),
        sa.UniqueConstraint("short_name"),
    )
    op.create_table(
        "equipment",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("price", sa.SmallInteger(), nullable=False),
        sa.Column("weight", sa.Float(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "familyfate",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column(
            "region_type",
            sa.Enum("NORTH", "NILFGAARD", "ENDER_NATIONS", name="regiontype"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "familysituation",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column(
            "region_type",
            sa.Enum("NORTH", "NILFGAARD", "ENDER_NATIONS", name="regiontype"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "importantevent",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "event_type",
            sa.Enum(
                "FORTUNE_OR_MISFORTUNE",
                "ALLIES_OR_ENEMIES",
                "LOVE",
                name="importanteventtype",
            ),
            nullable=False,
        ),
        sa.Column("description", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "parentfate",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column(
            "region_type",
            sa.Enum("NORTH", "NILFGAARD", "ENDER_NATIONS", name="regiontype"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "profession",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=80), nullable=False),
        sa.Column("defining_skill", sa.String(length=100), nullable=False),
        sa.Column("defining_skill_description", sa.Text(), nullable=False),
        sa.Column("energy", sa.SmallInteger(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "race",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column(
            "social_status",
            sa.Enum("EQUALITY", "TOLERANCE", "FEAR", "HATE", name="socialstatus"),
            nullable=False,
        ),
        sa.Column("family_is_live", sa.Boolean(), nullable=True),
        sa.Column("parents_is_live", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "region",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=70), nullable=False),
        sa.Column(
            "region_type",
            sa.Enum("NORTH", "NILFGAARD", "ENDER_NATIONS", name="regiontype"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "relative",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "gender", sa.Enum("MALE", "FEMALE", name="gendertype"), nullable=False
        ),
        sa.Column(
            "age", sa.Enum("ELDER", "YOUNGER", "TWIN", name="agetype"), nullable=False
        ),
        sa.Column(
            "attitude",
            sa.Enum(
                "WISH_DEAD",
                "HATE_YOU",
                "ENVIES_YOU",
                "NO_BIG_DEAL",
                "LOVE_YOU",
                "EQUALS_YOU",
                "JEALOUS_OF_YOU",
                name="attitudetype",
            ),
            nullable=False,
        ),
        sa.Column(
            "core_character_trait",
            sa.Enum(
                "MODESTY",
                "AGGRESSION",
                "KINDNESS",
                "FREAKY",
                "THOUGHTFULNESS",
                "CHATTINESS",
                "ROMANTICISM",
                "SEVERITY",
                "DESPONDENCY",
                "INFANTILIZATION",
                name="charactertraittype",
            ),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("avatar", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "character",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=80), nullable=True),
        sa.Column("age", sa.SmallInteger(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "parent_fate_type",
            sa.Enum("MOTHER", "Father", "BOTH", name="parentfatetype"),
            nullable=True,
        ),
        sa.Column("clothes", sa.String(length=80), nullable=True),
        sa.Column("hairstyle", sa.String(length=50), nullable=True),
        sa.Column("jewelry", sa.String(length=50), nullable=True),
        sa.Column(
            "who_is_valued",
            sa.Enum(
                "PARENTS",
                "BROTHER_SISTER",
                "BELOVED",
                "FRIEND",
                "YOURSELF",
                "PET",
                "MENTOR",
                "PUBLIC_PERSON",
                "PERSONAL_HERO",
                "NOBODY",
                name="whomisvalued",
            ),
            nullable=True,
        ),
        sa.Column(
            "what_value",
            sa.Enum(
                "MONEY",
                "HONOR",
                "YOUR_WORD",
                "EARTHLY_PLEASURES",
                "KNOWLEDGE",
                "REVENGE",
                "POWER",
                "LOVE",
                "SURVIVAL",
                "FRIENDSHIP",
                name="whatvalue",
            ),
            nullable=True,
        ),
        sa.Column("thinks_about_people", sa.String(length=255), nullable=True),
        sa.Column("profession_id", sa.Integer(), nullable=True),
        sa.Column("race_id", sa.Integer(), nullable=True),
        sa.Column("region_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["profession_id"],
            ["profession.id"],
        ),
        sa.ForeignKeyConstraint(
            ["race_id"],
            ["race.id"],
        ),
        sa.ForeignKeyConstraint(
            ["region_id"],
            ["region.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "friend",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column(
            "region_type",
            sa.Enum("NORTH", "NILFGAARD", "ENDER_NATIONS", name="regiontype"),
            nullable=False,
        ),
        sa.Column("equipment_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["equipment_id"],
            ["equipment.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "profession_equipment",
        sa.Column("profession_id", sa.Integer(), nullable=True),
        sa.Column("equipment_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["equipment_id"],
            ["equipment.id"],
        ),
        sa.ForeignKeyConstraint(
            ["profession_id"],
            ["profession.id"],
        ),
    )
    op.create_table(
        "skill",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=25), nullable=False),
        sa.Column("attribute_id", sa.Integer(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["attribute_id"],
            ["attribute.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "characterattribute",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("character_id", sa.Integer(), nullable=False),
        sa.Column("attribute_id", sa.Integer(), nullable=False),
        sa.Column("value", sa.SmallInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["attribute_id"],
            ["attribute.id"],
        ),
        sa.ForeignKeyConstraint(
            ["character_id"],
            ["character.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "characterequipment",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("character_id", sa.Integer(), nullable=False),
        sa.Column("equipment_id", sa.Integer(), nullable=False),
        sa.Column("quantity", sa.SmallInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["character_id"],
            ["character.id"],
        ),
        sa.ForeignKeyConstraint(
            ["equipment_id"],
            ["equipment.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "characterskill",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("character_id", sa.Integer(), nullable=False),
        sa.Column("skill_id", sa.Integer(), nullable=False),
        sa.Column("value", sa.SmallInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["character_id"],
            ["character.id"],
        ),
        sa.ForeignKeyConstraint(
            ["skill_id"],
            ["skill.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "charactertrait",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("character_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["character_id"],
            ["character.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("charactertrait")
    op.drop_table("characterskill")
    op.drop_table("characterequipment")
    op.drop_table("characterattribute")
    op.drop_table("skill")
    op.drop_table("profession_equipment")
    op.drop_table("friend")
    op.drop_table("character")
    op.drop_table("user")
    op.drop_table("relative")
    op.drop_table("region")
    op.drop_table("race")
    op.drop_table("profession")
    op.drop_table("parentfate")
    op.drop_table("importantevent")
    op.drop_table("familysituation")
    op.drop_table("familyfate")
    op.drop_table("equipment")
    op.drop_table("attribute")
    # ### end Alembic commands ###
